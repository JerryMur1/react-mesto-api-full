{"ast":null,"code":"const BASE_URL = `${window.location.protocol}${process.env.REACT_APP_API_URL || '//localhost:3001'}`;\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json());\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    console.log(data);\n\n    if (data.token) {\n      console.log(data);\n      localStorage.setItem('token', data.token);\n      return data;\n    } else {\n      return;\n    }\n  }).catch(err => console.log(err));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem(token)}`\n    }\n  }).then(res => res.json()).then(data => data).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/dmitrii/react-mesto-api-full/frontend/src/mestoAuth.js"],"names":["BASE_URL","window","location","protocol","process","env","REACT_APP_API_URL","register","email","password","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","authorize","data","console","log","token","localStorage","setItem","catch","err","getContent","getItem","res"],"mappings":"AACA,MAAMA,QAAQ,GAAI,GAAEC,MAAM,CAACC,QAAP,CAAgBC,QAAS,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,IAAiC,kBAAmB,EAAnG;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AACxC,SAAOC,KAAK,CAAE,GAAEV,QAAS,SAAb,EAAuB;AAC/BW,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFsB;AAM/BC,IAAAA,WAAW,EAAE,SANkB;AAO/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AAPyB,GAAvB,CAAL,CASNQ,IATM,CASAC,QAAD,IAAaA,QAAQ,CAACC,IAAT,EATZ,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMC,SAAS,GAAG,CAACZ,KAAD,EAAQC,QAAR,KAAqB;AAC1C,SAAOC,KAAK,CAAE,GAAEV,QAAS,SAAb,EAAuB;AACjCW,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAOjCE,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AAP2B,GAAvB,CAAL,CASNQ,IATM,CASAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATZ,EAUNF,IAVM,CAUAI,IAAD,IAAU;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACF,QAAIA,IAAI,CAACG,KAAT,EAAe;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACG,KAAnC;AACA,aAAOH,IAAP;AACD,KAJD,MAKK;AACD;AACH;AACF,GApBM,EAqBNM,KArBM,CAqBAC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CArBP,CAAP;AAsBD,CAvBI;AAyBL,OAAO,MAAMC,UAAU,GAAIL,KAAD,IAAW;AACnC,SAAOd,KAAK,CAAE,GAAEV,QAAS,WAAb,EAAyB;AACnCW,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,uBAAkB,UAASa,YAAY,CAACK,OAAb,CAAqBN,KAArB,CAA4B;AAHhD;AAF0B,GAAzB,CAAL,CAQNP,IARM,CAQDc,GAAG,IAAIA,GAAG,CAACZ,IAAJ,EARN,EASNF,IATM,CASDI,IAAI,IAAIA,IATP,EAUNM,KAVM,CAUAC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAVP,CAAP;AAWD,CAZM","sourcesContent":["\nconst BASE_URL = `${window.location.protocol}${process.env.REACT_APP_API_URL || '//localhost:3001'}`\n\nexport const register = (email, password) =>{\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({email, password})\n      })\n    .then((response)=> response.json())\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      \n      body: JSON.stringify({email, password})\n    })\n    .then((response => response.json()))\n    .then((data) => {\n        console.log(data)\n      if (data.token){\n        console.log(data)\n        localStorage.setItem('token', data.token);\n        return data;\n      }\n      else {\n          return;\n      } \n    })\n    .catch(err => console.log(err))\n  };\n  \n  export const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(token)}`,\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(err => console.log(err))\n  }\n  \n  "]},"metadata":{},"sourceType":"module"}