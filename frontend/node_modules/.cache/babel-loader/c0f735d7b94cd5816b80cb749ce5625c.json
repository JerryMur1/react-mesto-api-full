{"ast":null,"code":"import _slicedToArray from\"/Users/dmitrii/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import PopupWithForm from'./PopupWithForm';import{CurrentUserContext}from'../context/CurrentUserContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EditProfilePopup(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,onUpdateUser=_ref.onUpdateUser;var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),name=_React$useState2[0],setName=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),description=_React$useState4[0],setDescription=_React$useState4[1];var currentUser=React.useContext(CurrentUserContext);function handleNameChange(e){setName(e.target.value);}function handleDescriptionChange(e){setDescription(e.target.value);}// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(function(){setName(currentUser.name||'');setDescription(currentUser.about||'');},[currentUser]);function handleSubmit(e){// Запрещаем браузеру переходить по адресу формы\ne.preventDefault();// Передаём значения управляемых компонентов во внешний обработчик\nonUpdateUser({name:name,about:description});}return/*#__PURE__*/_jsx(PopupWithForm,{title:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",name:\"edit\",isOpen:isOpen?\"popup_is-opened\":\"\",onClose:onClose,onSubmit:handleSubmit,button:\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{value:name,onChange:handleNameChange,placeholder:\"\\u0418\\u043C\\u044F\",required:true,type:\"text\",name:\"name\",minLength:\"2\",maxLength:\"40\",id:\"name-profile\",className:\"popup__name popup__name_type_title\"}),/*#__PURE__*/_jsx(\"span\",{id:\"name-profile-error\",className:\"error\"}),/*#__PURE__*/_jsx(\"input\",{onChange:handleDescriptionChange,value:description,placeholder:\"\\u041E \\u0441\\u0435\\u0431\\u0435\",required:true,type:\"text\",name:\"about\",minLength:\"2\",maxLength:\"200\",id:\"secondname-profile\",className:\"popup__name popup__name_type_subtitle\"}),/*#__PURE__*/_jsx(\"span\",{id:\"secondname-profile-error\",className:\"error\"})]})});}export default EditProfilePopup;","map":{"version":3,"sources":["/Users/dmitrii/react-mesto-api-full/frontend/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","useState","name","setName","description","setDescription","currentUser","useContext","handleNameChange","e","target","value","handleDescriptionChange","useEffect","about","handleSubmit","preventDefault"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,kBAAT,KAAmC,+BAAnC,C,6IAEA,QAASC,CAAAA,gBAAT,MAA0D,IAA/BC,CAAAA,MAA+B,MAA/BA,MAA+B,CAAvBC,OAAuB,MAAvBA,OAAuB,CAAdC,YAAc,MAAdA,YAAc,qBAC9BN,KAAK,CAACO,QAAN,CAAe,EAAf,CAD8B,oDAC/CC,IAD+C,qBACzCC,OADyC,0CAEhBT,KAAK,CAACO,QAAN,CAAe,EAAf,CAFgB,qDAE/CG,WAF+C,qBAElCC,cAFkC,qBAGtD,GAAMC,CAAAA,WAAW,CAAGZ,KAAK,CAACa,UAAN,CAAiBX,kBAAjB,CAApB,CACA,QAASY,CAAAA,gBAAT,CAA0BC,CAA1B,CAA4B,CACxBN,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACH,CACD,QAASC,CAAAA,uBAAT,CAAiCH,CAAjC,CAAmC,CAC/BJ,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,CACH,CAKL;AACA;AACAjB,KAAK,CAACmB,SAAN,CAAgB,UAAM,CACpBV,OAAO,CAACG,WAAW,CAACJ,IAAZ,EAAoB,EAArB,CAAP,CACAG,cAAc,CAACC,WAAW,CAACQ,KAAZ,EAAqB,EAAtB,CAAd,CACD,CAHD,CAGG,CAACR,WAAD,CAHH,EAMA,QAASS,CAAAA,YAAT,CAAsBN,CAAtB,CAAyB,CACrB;AACAA,CAAC,CAACO,cAAF,GAEA;AACAhB,YAAY,CAAC,CACXE,IAAI,CAAJA,IADW,CAEXY,KAAK,CAAEV,WAFI,CAAD,CAAZ,CAID,CACC,mBACA,KAAC,aAAD,EACM,KAAK,CAAC,2HADZ,CAEM,IAAI,CAAC,MAFX,CAGM,MAAM,CAAEN,MAAM,CAAG,iBAAH,CAAuB,EAH3C,CAIM,OAAO,CAAEC,OAJf,CAKM,QAAQ,CAAEgB,YALhB,CAMM,MAAM,CAAC,wDANb,CAOM,QAAQ,cACN,wCACE,cACE,KAAK,CAAEb,IADT,CAEE,QAAQ,CAAEM,gBAFZ,CAGE,WAAW,CAAC,oBAHd,CAIE,QAAQ,KAJV,CAKE,IAAI,CAAC,MALP,CAME,IAAI,CAAC,MANP,CAOE,SAAS,CAAC,GAPZ,CAQE,SAAS,CAAC,IARZ,CASE,EAAE,CAAC,cATL,CAUE,SAAS,CAAC,oCAVZ,EADF,cAaE,aAAM,EAAE,CAAC,oBAAT,CAA8B,SAAS,CAAC,OAAxC,EAbF,cAcE,cACA,QAAQ,CAAEI,uBADV,CAEE,KAAK,CAAER,WAFT,CAGE,WAAW,CAAC,iCAHd,CAIE,QAAQ,KAJV,CAKE,IAAI,CAAC,MALP,CAME,IAAI,CAAC,OANP,CAOE,SAAS,CAAC,GAPZ,CAQE,SAAS,CAAC,KARZ,CASE,EAAE,CAAC,oBATL,CAUE,SAAS,CAAC,uCAVZ,EAdF,cA0BE,aAAM,EAAE,CAAC,0BAAT,CAAoC,SAAS,CAAC,OAA9C,EA1BF,GARR,EADA,CAwCH,CAED,cAAeP,CAAAA,gBAAf","sourcesContent":["import React from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../context/CurrentUserContext'\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}){\n    const [name, setName] = React.useState('')\n    const [description, setDescription] = React.useState('')\n    const currentUser = React.useContext(CurrentUserContext);\n    function handleNameChange(e){\n        setName(e.target.value)\n    }\n    function handleDescriptionChange(e){\n        setDescription(e.target.value)\n    }\n\n\n   \n\n// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(() => {\n  setName(currentUser.name || '');\n  setDescription(currentUser.about || '');\n}, [currentUser]); \n\n\nfunction handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n  \n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n    return (\n    <PopupWithForm\n          title=\"Редактировать профиль\"\n          name=\"edit\"\n          isOpen={isOpen ? \"popup_is-opened\" : \"\"}\n          onClose={onClose}\n          onSubmit={handleSubmit}\n          button=\"Сохранить\"\n          children={\n            <>\n              <input\n                value={name}\n                onChange={handleNameChange}\n                placeholder='Имя'\n                required\n                type=\"text\"\n                name='name'\n                minLength=\"2\"\n                maxLength=\"40\"\n                id=\"name-profile\"\n                className=\"popup__name popup__name_type_title\"\n              />\n              <span id=\"name-profile-error\" className=\"error\"></span>\n              <input\n              onChange={handleDescriptionChange}\n                value={description}\n                placeholder='О себе'\n                required\n                type=\"text\"\n                name='about'\n                minLength=\"2\"\n                maxLength=\"200\"\n                id=\"secondname-profile\"\n                className=\"popup__name popup__name_type_subtitle\"\n              />\n              <span id=\"secondname-profile-error\" className=\"error\"></span>\n            </>\n          }\n        />\n    )\n}\n\nexport default EditProfilePopup"]},"metadata":{},"sourceType":"module"}