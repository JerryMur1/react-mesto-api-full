{"ast":null,"code":"var BASE_URL=\"\".concat(window.location.protocol).concat(process.env.REACT_APP_API_URL||'//localhost:3001');export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},credentials:'include',body:JSON.stringify({email:email,password:password})}).then(function(response){return response.json();});};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(response){return response.json();}).then(function(data){console.log(data);if(data.token){console.log(data);localStorage.setItem('token',data.token);return data;}else{return;}}).catch(function(err){return console.log(err);});};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem(token))}}).then(function(res){return res.json();}).then(function(data){return data;}).catch(function(err){return console.log(err);});};","map":{"version":3,"sources":["/Users/dmitrii/react-mesto-api-full/frontend/src/mestoAuth.js"],"names":["BASE_URL","window","location","protocol","process","env","REACT_APP_API_URL","register","email","password","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","authorize","data","console","log","token","localStorage","setItem","catch","err","getContent","getItem","res"],"mappings":"AACA,GAAMA,CAAAA,QAAQ,WAAMC,MAAM,CAACC,QAAP,CAAgBC,QAAtB,SAAiCC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,EAAiC,kBAAlE,CAAd,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAoB,CACxC,MAAOC,CAAAA,KAAK,WAAIV,QAAJ,YAAuB,CAC/BW,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFsB,CAM/BC,WAAW,CAAE,SANkB,CAO/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACR,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CAPyB,CAAvB,CAAL,CASNQ,IATM,CASD,SAACC,QAAD,QAAaA,CAAAA,QAAQ,CAACC,IAAT,EAAb,EATC,CAAP,CAUH,CAXM,CAaP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACZ,KAAD,CAAQC,QAAR,CAAqB,CAC1C,MAAOC,CAAAA,KAAK,WAAIV,QAAJ,YAAuB,CACjCW,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAOjCE,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACR,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CAP2B,CAAvB,CAAL,CASNQ,IATM,CASA,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EATR,EAUNF,IAVM,CAUD,SAACI,IAAD,CAAU,CACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACF,GAAIA,IAAI,CAACG,KAAT,CAAe,CACbF,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACAI,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BL,IAAI,CAACG,KAAnC,EACA,MAAOH,CAAAA,IAAP,CACD,CAJD,IAKK,CACD,OACH,CACF,CApBM,EAqBNM,KArBM,CAqBA,SAAAC,GAAG,QAAIN,CAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAAJ,EArBH,CAAP,CAsBD,CAvBI,CAyBL,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,KAAD,CAAW,CACnC,MAAOd,CAAAA,KAAK,WAAIV,QAAJ,cAAyB,CACnCW,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAGP,iCAA2Ba,YAAY,CAACK,OAAb,CAAqBN,KAArB,CAA3B,CAHO,CAF0B,CAAzB,CAAL,CAQNP,IARM,CAQD,SAAAc,GAAG,QAAIA,CAAAA,GAAG,CAACZ,IAAJ,EAAJ,EARF,EASNF,IATM,CASD,SAAAI,IAAI,QAAIA,CAAAA,IAAJ,EATH,EAUNM,KAVM,CAUA,SAAAC,GAAG,QAAIN,CAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAAJ,EAVH,CAAP,CAWD,CAZM","sourcesContent":["\nconst BASE_URL = `${window.location.protocol}${process.env.REACT_APP_API_URL || '//localhost:3001'}`\n\nexport const register = (email, password) =>{\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({email, password})\n      })\n    .then((response)=> response.json())\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      \n      body: JSON.stringify({email, password})\n    })\n    .then((response => response.json()))\n    .then((data) => {\n        console.log(data)\n      if (data.token){\n        console.log(data)\n        localStorage.setItem('token', data.token);\n        return data;\n      }\n      else {\n          return;\n      } \n    })\n    .catch(err => console.log(err))\n  };\n  \n  export const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(token)}`,\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(err => console.log(err))\n  }\n  \n  "]},"metadata":{},"sourceType":"module"}