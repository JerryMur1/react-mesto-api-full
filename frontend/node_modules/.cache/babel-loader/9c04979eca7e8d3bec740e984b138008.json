{"ast":null,"code":"/* eslint-disable no-useless-concat */\nexport class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + \"cards\", {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._handleResOk);\n  }\n\n  addCards(data) {\n    return fetch(this._baseUrl + \"cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._handleResOk);\n  }\n\n  addUserId(data) {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._handleResOk);\n  }\n\n  getUserId() {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\", {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._handleResOk);\n  }\n\n  addAvatarId(data) {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\" + \"/\" + \"avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._handleResOk);\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getInitialCards(), this.getUserId()]);\n  }\n\n  deleteCard(_id) {\n    return fetch(this._baseUrl + \"cards/\" + _id, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._handleResOk);\n  }\n\n  likeCard(_id, like) {\n    // console.log(isLiked)\n    return fetch(`${this._baseUrl}cards/likes/${_id}`, {\n      method: like ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(this._handleResOk);\n  }\n\n  _handleResOk(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-18/\",\n  headers: {\n    authorization: \"a40cc85c-64a0-4b1f-ad4a-926989d9eacf\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/dmitrii/Downloads/react-mesto-auth-main/src/utils/api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","getInitialCards","fetch","method","then","_handleResOk","addCards","data","body","JSON","stringify","name","link","addUserId","about","getUserId","addAvatarId","avatar","getAllNeededData","Promise","all","deleteCard","_id","likeCard","like","res","ok","json","reject","status","api","authorization"],"mappings":"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","sourcesContent":["/* eslint-disable no-useless-concat */\nexport class Api {\n  constructor({ baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n    \n\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + \"cards\", {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._handleResOk);\n  }\n\n  addCards(data) {\n    return fetch(this._baseUrl + \"cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then(this._handleResOk);\n  }\n\n  addUserId(data) {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      }),\n    }).then(this._handleResOk);\n  }\n\n  getUserId() {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\", {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._handleResOk);\n  }\n\n  addAvatarId(data) {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\" + \"/\" + \"avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._handleResOk);\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getInitialCards(), this.getUserId()]);\n  }\n\n  deleteCard(_id) {\n    return fetch(this._baseUrl + \"cards/\" + _id, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._handleResOk);\n  }\n\n  likeCard(_id, like) {\n    // console.log(isLiked)\n    return fetch(`${this._baseUrl}cards/likes/${_id}`, {\n      method: like ? \"PUT\" : \"DELETE\",\n      headers: this._headers,\n      \n    }).then(this._handleResOk);\n    \n  }\n\n\n  _handleResOk(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-18/\",\n  headers: {\n    authorization: \"a40cc85c-64a0-4b1f-ad4a-926989d9eacf\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}