{"ast":null,"code":"/* eslint-disable no-useless-concat */\nexport class Api {\n  constructor({\n    baseUrl\n  }) {\n    this._baseUrl = baseUrl;\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + \"cards\", {\n      method: \"GET\",\n      headers: this.headers(),\n      credentials: 'include'\n    }).then(this._handleResOk);\n  }\n\n  addCards(data) {\n    return fetch(this._baseUrl + \"cards\", {\n      method: \"POST\",\n      headers: this.headers(),\n      credentials: 'include',\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._handleResOk);\n  }\n\n  addUserId(data) {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\", {\n      method: \"PATCH\",\n      headers: this.headers(),\n      credentials: 'include',\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._handleResOk);\n  }\n\n  getUserId() {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\", {\n      method: \"GET\",\n      headers: this.headers(),\n      credentials: 'include'\n    }).then(this._handleResOk);\n  }\n\n  addAvatarId(data) {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\" + \"/\" + \"avatar\", {\n      method: \"PATCH\",\n      headers: this.headers(),\n      credentials: 'include',\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._handleResOk);\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getInitialCards(), this.getUserId()]);\n  }\n\n  deleteCard(_id) {\n    return fetch(this._baseUrl + \"cards/\" + _id, {\n      method: \"DELETE\",\n      headers: this.headers(),\n      credentials: 'include'\n    }).then(this._handleResOk);\n  }\n\n  likeCard(_id, like) {\n    // console.log(isLiked)\n    return fetch(`${this._baseUrl}cards/${_id}/likes`, {\n      method: like ? \"PUT\" : \"DELETE\",\n      headers: this.headers(),\n      credentials: 'include'\n    }).then(this._handleResOk);\n  }\n\n  signin(body) {\n    return fetch(`${this._baseUrl}signin`, {\n      method: 'POST',\n      headers: this.headers(),\n      credentials: 'include',\n      body: JSON.stringify(body)\n    }).then(this._handleResOk);\n  }\n\n  signup(body) {\n    return fetch(`${this._baseUrl}signup`, {\n      method: 'POST',\n      headers: this.headers(),\n      credentials: 'include',\n      body: JSON.stringify(body)\n    }).then(this._handleResOk);\n  }\n\n  _handleResOk(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  headers() {\n    return {\n      authorization: `Bearer ${localStorage.getItem('token')}`,\n      \"Content-Type\": \"application/json\"\n    };\n  }\n\n}\nconst api = new Api({\n  baseUrl: \"//localhost:3001/\"\n});\nexport default api;","map":{"version":3,"sources":["/Users/dmitrii/react-mesto-api-full/frontend/src/utils/api.js"],"names":["Api","constructor","baseUrl","_baseUrl","getInitialCards","fetch","method","headers","credentials","then","_handleResOk","addCards","data","body","JSON","stringify","name","link","addUserId","about","getUserId","addAvatarId","avatar","getAllNeededData","Promise","all","deleteCard","_id","likeCard","like","signin","signup","res","ok","json","reject","status","authorization","localStorage","getItem","api"],"mappings":"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","sourcesContent":["/* eslint-disable no-useless-concat */\nexport class Api {\n  constructor({ baseUrl}) {\n    this._baseUrl = baseUrl;\n    \n\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + \"cards\", {\n      method: \"GET\",\n      headers: this.headers(),\n      credentials: 'include',\n    }).then(this._handleResOk);\n  }\n\n  addCards(data) {\n    return fetch(this._baseUrl + \"cards\", {\n      method: \"POST\",\n      headers: this.headers(),\n      credentials: 'include',\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then(this._handleResOk);\n  }\n\n  addUserId(data) {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\", {\n      method: \"PATCH\",\n      headers: this.headers(),\n      credentials: 'include',\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      }),\n    }).then(this._handleResOk);\n  }\n\n  getUserId() {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\", {\n      method: \"GET\",\n      headers: this.headers(),\n      credentials: 'include',\n    }).then(this._handleResOk);\n  }\n\n  addAvatarId(data) {\n    return fetch(this._baseUrl + \"users\" + \"/\" + \"me\" + \"/\" + \"avatar\", {\n      method: \"PATCH\",\n      headers: this.headers(),\n      credentials: 'include',\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._handleResOk);\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getInitialCards(), this.getUserId()]);\n  }\n\n  deleteCard(_id) {\n    return fetch(this._baseUrl + \"cards/\" + _id, {\n      method: \"DELETE\",\n      headers: this.headers(),\n      credentials: 'include',\n    }).then(this._handleResOk);\n  }\n\n  likeCard(_id, like) {\n    // console.log(isLiked)\n    return fetch(`${this._baseUrl}cards/${_id}/likes`, {\n      method: like ? \"PUT\" : \"DELETE\",\n      headers: this.headers(),\n      credentials: 'include',\n      \n    }).then(this._handleResOk);\n    \n  }\n\nsignin(body) {\n  return fetch(`${this._baseUrl}signin`, {\n    method: 'POST',\n    headers: this.headers(),\n    credentials: 'include',\n    body: JSON.stringify(body)\n    \n  }).then(this._handleResOk);\n  \n}\nsignup(body) {\n  return fetch(`${this._baseUrl}signup`, {\n    method: 'POST',\n    headers: this.headers(),\n    credentials: 'include',\n    body: JSON.stringify(body)\n    \n  }).then(this._handleResOk);\n  \n}\n  _handleResOk(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  headers(){\n    return  {\n      authorization: `Bearer ${localStorage.getItem('token')}`,\n      \"Content-Type\": \"application/json\",\n    }\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"//localhost:3001/\",\n \n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}