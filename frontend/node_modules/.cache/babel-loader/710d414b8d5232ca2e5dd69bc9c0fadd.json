{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dmitrii/react-mesto-auth/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './popupWithForm';\nimport { CurrentUserContext } from '../context/CurrentUserContext';\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser\n}) {\n  _s();\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  } // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"edit\",\n    isOpen: isOpen ? \"popup_is-opened\" : \"\",\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    button: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: handleNameChange,\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        required: true,\n        type: \"text\",\n        name: \"name\",\n        minLength: \"2\",\n        maxLength: \"40\",\n        id: \"name-profile\",\n        className: \"popup__name popup__name_type_title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"name-profile-error\",\n        className: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleDescriptionChange,\n        value: description,\n        placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n        required: true,\n        type: \"text\",\n        name: \"about\",\n        minLength: \"2\",\n        maxLength: \"200\",\n        id: \"secondname-profile\",\n        className: \"popup__name popup__name_type_subtitle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"secondname-profile-error\",\n        className: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"xN46w6he9KBZHBk1q+JY6GV4FrA=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/dmitrii/react-mesto-auth/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","name","setName","useState","description","setDescription","currentUser","useContext","handleNameChange","e","target","value","handleDescriptionChange","useEffect","about","handleSubmit","preventDefault"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,+BAAnC;;AAEA,SAASC,gBAAT,CAA0B;AAACC,EAAAA,MAAD;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAA1B,EAA0D;AAAA;;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAtC;AACA,QAAMG,WAAW,GAAGZ,KAAK,CAACa,UAAN,CAAiBX,kBAAjB,CAApB;;AACA,WAASY,gBAAT,CAA0BC,CAA1B,EAA4B;AACxBP,IAAAA,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AACD,WAASC,uBAAT,CAAiCH,CAAjC,EAAmC;AAC/BJ,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GATqD,CAc1D;AACA;;;AACAjB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBX,IAAAA,OAAO,CAACI,WAAW,CAACL,IAAb,CAAP;AACAI,IAAAA,cAAc,CAACC,WAAW,CAACQ,KAAb,CAAd;AACD,GAHD,EAGG,CAACR,WAAD,CAHH;;AAMA,WAASS,YAAT,CAAsBN,CAAtB,EAAyB;AACrB;AACAA,IAAAA,CAAC,CAACO,cAAF,GAFqB,CAIrB;;AACAhB,IAAAA,YAAY,CAAC;AACXC,MAAAA,IADW;AAEXa,MAAAA,KAAK,EAAEV;AAFI,KAAD,CAAZ;AAID;;AACC,sBACA,QAAC,aAAD;AACM,IAAA,KAAK,EAAC,2HADZ;AAEM,IAAA,IAAI,EAAC,MAFX;AAGM,IAAA,MAAM,EAAEN,MAAM,GAAG,iBAAH,GAAuB,EAH3C;AAIM,IAAA,OAAO,EAAEC,OAJf;AAKM,IAAA,QAAQ,EAAEgB,YALhB;AAMM,IAAA,MAAM,EAAC,wDANb;AAOM,IAAA,QAAQ,eACN;AAAA,8BACE;AACE,QAAA,KAAK,EAAEd,IADT;AAEE,QAAA,QAAQ,EAAEO,gBAFZ;AAGE,QAAA,WAAW,EAAC,oBAHd;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,SAAS,EAAC,GAPZ;AAQE,QAAA,SAAS,EAAC,IARZ;AASE,QAAA,EAAE,EAAC,cATL;AAUE,QAAA,SAAS,EAAC;AAVZ;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAM,QAAA,EAAE,EAAC,oBAAT;AAA8B,QAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AACA,QAAA,QAAQ,EAAEI,uBADV;AAEE,QAAA,KAAK,EAAER,WAFT;AAGE,QAAA,WAAW,EAAC,iCAHd;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,SAAS,EAAC,GAPZ;AAQE,QAAA,SAAS,EAAC,KARZ;AASE,QAAA,EAAE,EAAC,oBATL;AAUE,QAAA,SAAS,EAAC;AAVZ;AAAA;AAAA;AAAA;AAAA,cAdF,eA0BE;AAAM,QAAA,EAAE,EAAC,0BAAT;AAAoC,QAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,UADA;AAwCH;;GAxEQP,gB;;KAAAA,gB;AA0ET,eAAeA,gBAAf","sourcesContent":["import React from 'react'\nimport PopupWithForm from './popupWithForm'\nimport { CurrentUserContext } from '../context/CurrentUserContext'\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}){\n    const [name, setName] = React.useState('')\n    const [description, setDescription] = React.useState('')\n    const currentUser = React.useContext(CurrentUserContext);\n    function handleNameChange(e){\n        setName(e.target.value)\n    }\n    function handleDescriptionChange(e){\n        setDescription(e.target.value)\n    }\n\n\n   \n\n// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(() => {\n  setName(currentUser.name);\n  setDescription(currentUser.about);\n}, [currentUser]); \n\n\nfunction handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n  \n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n    return (\n    <PopupWithForm\n          title=\"Редактировать профиль\"\n          name=\"edit\"\n          isOpen={isOpen ? \"popup_is-opened\" : \"\"}\n          onClose={onClose}\n          onSubmit={handleSubmit}\n          button=\"Сохранить\"\n          children={\n            <>\n              <input\n                value={name}\n                onChange={handleNameChange}\n                placeholder='Имя'\n                required\n                type=\"text\"\n                name='name'\n                minLength=\"2\"\n                maxLength=\"40\"\n                id=\"name-profile\"\n                className=\"popup__name popup__name_type_title\"\n              />\n              <span id=\"name-profile-error\" className=\"error\"></span>\n              <input\n              onChange={handleDescriptionChange}\n                value={description}\n                placeholder='О себе'\n                required\n                type=\"text\"\n                name='about'\n                minLength=\"2\"\n                maxLength=\"200\"\n                id=\"secondname-profile\"\n                className=\"popup__name popup__name_type_subtitle\"\n              />\n              <span id=\"secondname-profile-error\" className=\"error\"></span>\n            </>\n          }\n        />\n    )\n}\n\nexport default EditProfilePopup"]},"metadata":{},"sourceType":"module"}