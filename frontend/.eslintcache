[{"/Users/dmitrii/react-mesto-api-full/frontend/src/index.js":"1","/Users/dmitrii/react-mesto-api-full/frontend/src/reportWebVitals.js":"2","/Users/dmitrii/react-mesto-api-full/frontend/src/components/App.js":"3","/Users/dmitrii/react-mesto-api-full/frontend/src/components/Main.js":"4","/Users/dmitrii/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js":"5","/Users/dmitrii/react-mesto-api-full/frontend/src/components/EditProfilePopup.js":"6","/Users/dmitrii/react-mesto-api-full/frontend/src/components/Register.js":"7","/Users/dmitrii/react-mesto-api-full/frontend/src/components/AddPlacePopup.js":"8","/Users/dmitrii/react-mesto-api-full/frontend/src/components/ProtectedRoute.js":"9","/Users/dmitrii/react-mesto-api-full/frontend/src/components/Footer.js":"10","/Users/dmitrii/react-mesto-api-full/frontend/src/components/Header.js":"11","/Users/dmitrii/react-mesto-api-full/frontend/src/components/PopupImage.js":"12","/Users/dmitrii/react-mesto-api-full/frontend/src/components/Login.js":"13","/Users/dmitrii/react-mesto-api-full/frontend/src/mestoAuth.js":"14","/Users/dmitrii/react-mesto-api-full/frontend/src/components/InfoToolTip.js":"15","/Users/dmitrii/react-mesto-api-full/frontend/src/context/CurrentUserContext.js":"16","/Users/dmitrii/react-mesto-api-full/frontend/src/utils/api.js":"17","/Users/dmitrii/react-mesto-api-full/frontend/src/components/Card.js":"18","/Users/dmitrii/react-mesto-api-full/frontend/src/components/PopupWithForm.js":"19"},{"size":601,"mtime":1615622740085,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1615047162630,"results":"22","hashOfConfig":"21"},{"size":6571,"mtime":1617973453624,"results":"23","hashOfConfig":"21"},{"size":2003,"mtime":1617897664459,"results":"24","hashOfConfig":"21"},{"size":1056,"mtime":1616055807627,"results":"25","hashOfConfig":"21"},{"size":2520,"mtime":1616055802676,"results":"26","hashOfConfig":"21"},{"size":1954,"mtime":1616055783713,"results":"27","hashOfConfig":"21"},{"size":1967,"mtime":1616055936174,"results":"28","hashOfConfig":"21"},{"size":315,"mtime":1616055784988,"results":"29","hashOfConfig":"21"},{"size":174,"mtime":1616097760581,"results":"30","hashOfConfig":"21"},{"size":1040,"mtime":1616055796051,"results":"31","hashOfConfig":"21"},{"size":808,"mtime":1616055787893,"results":"32","hashOfConfig":"21"},{"size":1463,"mtime":1616097250634,"results":"33","hashOfConfig":"21"},{"size":1454,"mtime":1617977175886,"results":"34","hashOfConfig":"21"},{"size":1266,"mtime":1616055794329,"results":"35","hashOfConfig":"21"},{"size":82,"mtime":1615047162629,"results":"36","hashOfConfig":"21"},{"size":2682,"mtime":1618064064096,"results":"37","hashOfConfig":"21"},{"size":1865,"mtime":1617966662918,"results":"38","hashOfConfig":"21"},{"size":892,"mtime":1616055786170,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1a6y7nu",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/dmitrii/react-mesto-api-full/frontend/src/index.js",[],["81","82"],"/Users/dmitrii/react-mesto-api-full/frontend/src/reportWebVitals.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/App.js",["83"],"import Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport ImagePopup from \"./PopupImage\";\nimport React from \"react\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from '../context/CurrentUserContext'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\"\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as mestoAuth from \"../mestoAuth\"\nimport InfoToolTip from \"./InfoToolTip\";\n\n\nfunction App() {\n \n  const [cards, setCards] = React.useState([]);\n  const history = useHistory();\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(false)\n  const [userData, setUserData] = React.useState('')\n  \n  function handleUpdateUser({name, about}){\n \n      api.addUserId({name, about}).then((res) => {\n        setCurrentUser({\n          name: res.name, about:res.about, avatar: res.avatar})\n      }).catch((res)=>{\n        console.log(res)\n      }).finally(()=>{\n        closeAllPopups()\n      });\n    };\n\n    \n    function handleUpdateAvatar({avatar}){\n \n      api.addAvatarId({avatar}).then((res) => {\n        setCurrentUser({\n   avatar: res.avatar, name: res.name, about:res.about})\n      }).catch((res)=>{\n        console.log(res)\n      }).finally(()=>{\n        closeAllPopups()\n      });\n    };\n\n \n  React.useEffect(() => {\n    if (!loggedIn) {\n      return;\n    }\n    api.getUserId().then((res) => {\n     \n      setCurrentUser({\n        name: res.name,\n        about: res.about,\n        avatar: res.avatar,\n        _id: res._id\n      })\n      \n    }).catch((res)=>{\n      console.log(res)\n      \n    });\n    \n  }, [loggedIn]);\n\n\n\n\n  React.useEffect(() => {\n    if (!loggedIn) {\n      return;\n    }\n    api.getInitialCards().then((item) => {\n      setCards(item.reverse());\n      \n      console.log(item)\n      \n    }).catch((res)=>{\n      console.log(res)\n    });\n  }, [loggedIn]);\n  \nfunction handleAddPlaceSubmit({name, link}){\n  api.addCards({name, link}).then(newCard => {\n    setCards([newCard, ...cards]);\n  }).catch((res)=>{\n    console.log(res)\n  }).finally(()=>{\n    closeAllPopups()\n  });;\n};\n\n\nfunction handleDeleteCard({cardId}) {\n  \n  api.deleteCard(cardId).then(() => {\n    const newCards = cards.filter(card => card._id !== cardId);\n    setCards(newCards);\n  });\n}\n\n\n  function handleCardLike({likes, cardId}) {\n    const isLiked = likes.some(i => i === currentUser._id);\n  \n    api.likeCard(cardId, !isLiked).then((newCard) => {\n      console.log(isLiked)\n      const newCards = cards.map(c => c._id === cardId ? newCard : c);\n      setCards(newCards);\n    });\n}\n\n\nconsole.log(cards)\n  const [isEditProfilePopupOpen, editOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, avatarOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, placeOpen] = React.useState(false);\n  const [card, selectedCard] = React.useState(null);\n  const [isInfoToolTipOpen, toolOpen] = React.useState(false);\n  const [status, setStatus] = React.useState(false)\n  const handleCardClick = ({link, name}) => {\n    selectedCard({link, name});\n  };\n  function handleInfoToolClick () {\n    toolOpen(true)\n  }\n  function handleEditEditClick() {\n    editOpen(true);\n  }\n  function handleEditAvatarClick() {\n    avatarOpen(true);\n  }\n  function handleEditAddClick() {\n    placeOpen(true);\n  }\n  function closeAllPopups() {\n    placeOpen(false);\n    avatarOpen(false);\n    editOpen(false);\n    toolOpen(false)\n    selectedCard(null);\n  }\nconst tokenCheck = () =>{\n  const token = localStorage.getItem('token')\n  if (token) {\n   \n    mestoAuth.getContent('token')\n    \n    .then((res) => {\n      console.log(res)\n      if(res){\n        setUserData({\n          ...userData,\n          email:res.email,\n        })\n        console.log(res);\n        setLoggedIn(true)\n      }\n      \n    })\n    .catch(e => console.error(e))\n  }\n  else {\n    \n    setLoggedIn(false)\n  }\n  \n}\nReact.useEffect(() =>{\n  tokenCheck();\n}, [])\nReact.useEffect(() =>{\n  if(loggedIn){\n    history.push('/')\n  }\n}, [history, loggedIn])\n\n  const handleRegister = (email, password) => {\n    \n    mestoAuth.register(email, password)\n    .then((res) =>{\n      console.log(res)\n      if(res.statusCode !== 400){\n        setStatus(true)\n        history.push('/signin')\n      }\n      else {\n        throw new Error('Что-то пошло не так')\n      }\n     \n    })\n    .catch((e) => console.log(e));\n  }\n  const handleLogin = (email, password) =>{\n    mestoAuth.authorize(email, password)\n.then((data) => {\n console.log(data)\n  if(data.token){\n    history.push('/')\n  localStorage.setItem('token', data.token)\n  console.log(data)\n  setLoggedIn(true)\n  setUserData({\n    ...userData,\n    email: data.email,\n  })\n  }\n  if(data.statusCode === 400){\n    throw new Error('Что-то пошло не так')\n  }\n  \n})\n.catch((e) => console.log(e));\n  }\n\nconst handleSignOut = () =>{\n  setLoggedIn(false)\n  localStorage.removeItem('token')\n}\n\n  return (\n      <div className=\"page\">\n   <CurrentUserContext.Provider value={currentUser}>\n   <Header handleSignOut={handleSignOut} email={userData.email}/>\n     <Switch>\n      <Route path=\"/signin\" >\n        <Login handleLogin={handleLogin}/>  \n     </Route>\n        <Route path=\"/signup\" >\n          <Register handleRegister={handleRegister} showPopup={handleInfoToolClick}/>\n        </Route>\n        <ProtectedRoute path=\"/\" component={Main} \n        handleSignOut = {handleSignOut}\n        onCardClick={handleCardClick}\n          onEditProfile={handleEditEditClick}\n          onAddPlace={handleEditAddClick}\n          onEditAvatar={handleEditAvatarClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          handleDeleteCard={handleDeleteCard}\n          loggedIn={loggedIn}/>\n     </Switch>\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onUpdatePlace={handleAddPlaceSubmit}/>\n       <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}/>\n       <InfoToolTip onClose={closeAllPopups} isOpen={isInfoToolTipOpen} status={status}/>\n        <ImagePopup card={card} onClose={closeAllPopups} />\n        <Footer />\n       \n        </CurrentUserContext.Provider>\n        \n      </div>\n   \n  );\n}\n\nexport default App;\n","/Users/dmitrii/react-mesto-api-full/frontend/src/components/Main.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/EditProfilePopup.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/Register.js",["84","85","86","87"],"import { Link, useHistory } from \"react-router-dom\";\nimport { useState } from \"react\"\nimport * as mestoAuth from \"../mestoAuth\"\nfunction Register({ handleRegister, showPopup }){\nconst [data, setData] = useState({\nemail:'',\npassword:''\n})\nconst [message, setMessage] = useState('');\nconst history = useHistory();\n\nconst  handleChange = (e) => {\n  const {name, value} = e.target;\nsetData({\n  ...data,\n  [name]:value\n})\nconsole.log(e)\n}\nconst handleSubmit = (e) => {\n  e.preventDefault()\nshowPopup()\n    handleRegister(data.email, data.password)\n\n}\n\n\n\n    return(\n    \n        <section className=\"register\" >\n          <form className=\"register__form\" onSubmit={handleSubmit}>\n            <h1 className=\"register__title\">Регистрация</h1>\n            <input\n                    value={data.email}\n                    onChange={handleChange}\n                    placeholder='Логин'\n                    required\n                    type=\"text\"\n                    name='email'\n                    minLength=\"2\"\n                    maxLength=\"40\"\n                    id=\"email\"\n                    className=\"register__name register__name_title\"\n                  />\n                  <input\n                  onChange={handleChange}\n                    value={data.password}\n                    placeholder='Пароль'\n                    required\n                    type=\"text\"\n                    name='password'\n                    minLength=\"2\"\n                    maxLength=\"200\"\n                    id=\"password\"\n                    className=\"register__name register__name_subtitle\"\n                  />\n                  <button className=\"register__button\" type=\"submit\" >Зарегистрироваться</button>\n                  <Link to=\"/signin\" className=\"register__signin\">Уже зарегестрированы? Войти</Link>\n                  </form>\n        </section>\n        )\n    }\n    export default Register","/Users/dmitrii/react-mesto-api-full/frontend/src/components/AddPlacePopup.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/ProtectedRoute.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/Footer.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/Header.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/PopupImage.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/Login.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/mestoAuth.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/InfoToolTip.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/context/CurrentUserContext.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/utils/api.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/Card.js",[],"/Users/dmitrii/react-mesto-api-full/frontend/src/components/PopupWithForm.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":178,"column":4,"nodeType":"94","endLine":178,"endColumn":6,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":3,"column":13,"nodeType":"98","messageId":"99","endLine":3,"endColumn":22},{"ruleId":"96","severity":1,"message":"100","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":15},{"ruleId":"96","severity":1,"message":"101","line":9,"column":17,"nodeType":"98","messageId":"99","endLine":9,"endColumn":27},{"ruleId":"96","severity":1,"message":"102","line":10,"column":7,"nodeType":"98","messageId":"99","endLine":10,"endColumn":14},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["105"],"no-unused-vars","'mestoAuth' is defined but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [tokenCheck]",{"range":"108","text":"109"},[4137,4139],"[tokenCheck]"]